#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Route66.LTS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="itspRoute")]
	public partial class LTSBase : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertReserve(Reserve instance);
    partial void UpdateReserve(Reserve instance);
    partial void DeleteReserve(Reserve instance);
    partial void InsertSale(Sale instance);
    partial void UpdateSale(Sale instance);
    partial void DeleteSale(Sale instance);
    partial void InsertStock(Stock instance);
    partial void UpdateStock(Stock instance);
    partial void DeleteStock(Stock instance);
    partial void InsertStockRemoved(StockRemoved instance);
    partial void UpdateStockRemoved(StockRemoved instance);
    partial void DeleteStockRemoved(StockRemoved instance);
    #endregion
		
		public LTSBase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LTSBase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LTSBase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LTSBase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customer
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employee
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Reserve> Reserve
		{
			get
			{
				return this.GetTable<Reserve>();
			}
		}
		
		public System.Data.Linq.Table<Sale> Sale
		{
			get
			{
				return this.GetTable<Sale>();
			}
		}
		
		public System.Data.Linq.Table<Stock> Stock
		{
			get
			{
				return this.GetTable<Stock>();
			}
		}
		
		public System.Data.Linq.Table<StockRemoved> StockRemoved
		{
			get
			{
				return this.GetTable<StockRemoved>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteCustomer")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustID", DbType="Int")] System.Nullable<int> custID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), custID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteEmployee")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpID", DbType="Int")] System.Nullable<int> empID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), empID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteReserve")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteReserve([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResID", DbType="Int")] System.Nullable<int> resID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), resID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteSale")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteSale([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SaleID", DbType="Int")] System.Nullable<int> saleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), saleID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteStock")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteStock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockID", DbType="Int")] System.Nullable<int> stockID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stockID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteStockRemoved")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteStockRemoved([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockRemovedID", DbType="Int")] System.Nullable<int> stockRemovedID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stockRemovedID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Deletesysdiagrams")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Deletesysdiagrams([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> diagram_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagram_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_diagramobjects", IsComposable=true)]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public System.Nullable<int> Fn_diagramobjects()
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertCustomer")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CellNo", DbType="VarChar(15)")] string cellNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustAddress", DbType="VarChar(40)")] string custAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(30)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDno", DbType="VarChar(50)")] string iDno, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(40)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Surname", DbType="VarChar(40)")] string surname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cellNo, custAddress, email, iDno, name, surname, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertEmployee")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activated", DbType="Bit")] System.Nullable<bool> activated, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CellNo", DbType="VarChar(15)")] string cellNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(30)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpAddress", DbType="VarChar(40)")] string empAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDno", DbType="VarChar(20)")] string iDno, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAdmin", DbType="Bit")] System.Nullable<bool> isAdmin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(40)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pass", DbType="VarChar(40)")] string pass, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Salary", DbType="Decimal(18,0)")] System.Nullable<decimal> salary, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Surname", DbType="VarChar(40)")] string surname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="VarChar(40)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activated, cellNo, email, empAddress, iDno, isAdmin, name, pass, salary, surname, username, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(11)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertReserve")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertReserve([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CellNo", DbType="VarChar(15)")] string cellNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(30)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDno", DbType="NVarChar(MAX)")] string iDno, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(40)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResDate", DbType="Date")] System.Nullable<System.DateTime> resDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockID", DbType="Int")] System.Nullable<int> stockID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Surname", DbType="VarChar(40)")] string surname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cellNo, email, iDno, name, resDate, stockID, surname, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertSale")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertSale([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustID", DbType="Int")] System.Nullable<int> custID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpID", DbType="Int")] System.Nullable<int> empID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Paid", DbType="Bit")] System.Nullable<bool> paid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SaleDate", DbType="Date")] System.Nullable<System.DateTime> saleDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockID", DbType="Int")] System.Nullable<int> stockID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), custID, empID, paid, saleDate, stockID, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertStock")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertStock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Make", DbType="VarChar(40)")] string make, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Model", DbType="VarChar(40)")] string model, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Decimal(18,0)")] System.Nullable<decimal> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehicleStatus", DbType="VarChar(40)")] string vehicleStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehicleYear", DbType="VarChar(40)")] string vehicleYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VIN", DbType="NVarChar(MAX)")] string vIN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), make, model, price, vehicleStatus, vehicleYear, vIN, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertStockRemoved")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertStockRemoved([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateRemoved", DbType="DateTime")] System.Nullable<System.DateTime> dateRemoved, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpId", DbType="Int")] System.Nullable<int> empId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VIN", DbType="NVarChar(MAX)")] string vIN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateRemoved, empId, vIN, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insertsysdiagrams")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Insertsysdiagrams([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(MAX)")] System.Data.Linq.Binary definition, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> principal_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), definition, name, principal_id, version, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Sales")]
		public ISingleResult<SalesResult> Sales()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<SalesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_alterdiagram")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_alterdiagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(MAX)")] System.Data.Linq.Binary definition)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, version, definition);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_creatediagram")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_creatediagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(MAX)")] System.Data.Linq.Binary definition)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, version, definition);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_dropdiagram")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_dropdiagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_helpdiagramdefinition")]
		public ISingleResult<Sp_helpdiagramdefinitionResult> Sp_helpdiagramdefinition([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
			return ((ISingleResult<Sp_helpdiagramdefinitionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_helpdiagrams")]
		public ISingleResult<Sp_helpdiagramsResult> Sp_helpdiagrams([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
			return ((ISingleResult<Sp_helpdiagramsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_renamediagram")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_renamediagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string new_diagramname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, new_diagramname);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCustomer")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CellNo", DbType="VarChar(15)")] string cellNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustAddress", DbType="VarChar(40)")] string custAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(30)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDno", DbType="VarChar(50)")] string iDno, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(40)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Surname", DbType="VarChar(40)")] string surname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustID", DbType="Int")] System.Nullable<int> custID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cellNo, custAddress, email, iDno, name, surname, custID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateEmployee")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateEmployee([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Activated", DbType="Bit")] System.Nullable<bool> activated, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CellNo", DbType="VarChar(15)")] string cellNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(30)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpAddress", DbType="VarChar(40)")] string empAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDno", DbType="VarChar(20)")] string iDno, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsAdmin", DbType="Bit")] System.Nullable<bool> isAdmin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(40)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pass", DbType="VarChar(40)")] string pass, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Salary", DbType="Decimal(18,0)")] System.Nullable<decimal> salary, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Surname", DbType="VarChar(40)")] string surname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Username", DbType="VarChar(40)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpID", DbType="Int")] System.Nullable<int> empID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), activated, cellNo, email, empAddress, iDno, isAdmin, name, pass, salary, surname, username, empID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateReserve")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateReserve([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CellNo", DbType="VarChar(15)")] string cellNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(30)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDno", DbType="NVarChar(MAX)")] string iDno, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(40)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResDate", DbType="Date")] System.Nullable<System.DateTime> resDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockID", DbType="Int")] System.Nullable<int> stockID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Surname", DbType="VarChar(40)")] string surname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ResID", DbType="Int")] System.Nullable<int> resID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), cellNo, email, iDno, name, resDate, stockID, surname, resID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateSale")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateSale([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustID", DbType="Int")] System.Nullable<int> custID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpID", DbType="Int")] System.Nullable<int> empID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Paid", DbType="Bit")] System.Nullable<bool> paid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SaleDate", DbType="Date")] System.Nullable<System.DateTime> saleDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockID", DbType="Int")] System.Nullable<int> stockID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SaleID", DbType="Int")] System.Nullable<int> saleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), custID, empID, paid, saleDate, stockID, saleID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateStock")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateStock([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Make", DbType="VarChar(40)")] string make, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Model", DbType="VarChar(40)")] string model, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Price", DbType="Decimal(18,0)")] System.Nullable<decimal> price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehicleStatus", DbType="VarChar(40)")] string vehicleStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehicleYear", DbType="VarChar(40)")] string vehicleYear, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VIN", DbType="NVarChar(MAX)")] string vIN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockID", DbType="Int")] System.Nullable<int> stockID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), make, model, price, vehicleStatus, vehicleYear, vIN, stockID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateStockRemoved")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateStockRemoved([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateRemoved", DbType="DateTime")] System.Nullable<System.DateTime> dateRemoved, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmpId", DbType="Int")] System.Nullable<int> empId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VIN", DbType="NVarChar(MAX)")] string vIN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockRemovedID", DbType="Int")] System.Nullable<int> stockRemovedID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dateRemoved, empId, vIN, stockRemovedID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Updatesysdiagrams")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Updatesysdiagrams([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(MAX)")] System.Data.Linq.Binary definition, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> principal_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> diagram_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), definition, name, principal_id, version, diagram_id);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustID;
		
		private string _IDno;
		
		private string _Name;
		
		private string _Surname;
		
		private string _CellNo;
		
		private string _Email;
		
		private string _CustAddress;
		
		private EntitySet<Sale> _Sale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustIDChanging(int value);
    partial void OnCustIDChanged();
    partial void OnIDnoChanging(string value);
    partial void OnIDnoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnCellNoChanging(string value);
    partial void OnCellNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCustAddressChanging(string value);
    partial void OnCustAddressChanged();
    #endregion
		
		public Customer()
		{
			this._Sale = new EntitySet<Sale>(new Action<Sale>(this.attach_Sale), new Action<Sale>(this.detach_Sale));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustID
		{
			get
			{
				return this._CustID;
			}
			set
			{
				if ((this._CustID != value))
				{
					this.OnCustIDChanging(value);
					this.SendPropertyChanging();
					this._CustID = value;
					this.SendPropertyChanged("CustID");
					this.OnCustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IDno
		{
			get
			{
				return this._IDno;
			}
			set
			{
				if ((this._IDno != value))
				{
					this.OnIDnoChanging(value);
					this.SendPropertyChanging();
					this._IDno = value;
					this.SendPropertyChanged("IDno");
					this.OnIDnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CellNo
		{
			get
			{
				return this._CellNo;
			}
			set
			{
				if ((this._CellNo != value))
				{
					this.OnCellNoChanging(value);
					this.SendPropertyChanging();
					this._CellNo = value;
					this.SendPropertyChanged("CellNo");
					this.OnCellNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustAddress", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string CustAddress
		{
			get
			{
				return this._CustAddress;
			}
			set
			{
				if ((this._CustAddress != value))
				{
					this.OnCustAddressChanging(value);
					this.SendPropertyChanging();
					this._CustAddress = value;
					this.SendPropertyChanged("CustAddress");
					this.OnCustAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Sale__CustID__1B0907CE", Storage="_Sale", ThisKey="CustID", OtherKey="CustID", DeleteRule="NO ACTION")]
		public EntitySet<Sale> Sale
		{
			get
			{
				return this._Sale;
			}
			set
			{
				this._Sale.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sale(Sale entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Sale(Sale entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmpID;
		
		private string _IDno;
		
		private string _Name;
		
		private string _Surname;
		
		private string _Username;
		
		private string _Pass;
		
		private string _CellNo;
		
		private string _Email;
		
		private string _EmpAddress;
		
		private decimal _Salary;
		
		private bool _IsAdmin;
		
		private System.Nullable<bool> _Activated;
		
		private EntitySet<Sale> _Sale;
		
		private EntitySet<StockRemoved> _StockRemoved;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpIDChanging(int value);
    partial void OnEmpIDChanged();
    partial void OnIDnoChanging(string value);
    partial void OnIDnoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnCellNoChanging(string value);
    partial void OnCellNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmpAddressChanging(string value);
    partial void OnEmpAddressChanged();
    partial void OnSalaryChanging(decimal value);
    partial void OnSalaryChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnActivatedChanging(System.Nullable<bool> value);
    partial void OnActivatedChanged();
    #endregion
		
		public Employee()
		{
			this._Sale = new EntitySet<Sale>(new Action<Sale>(this.attach_Sale), new Action<Sale>(this.detach_Sale));
			this._StockRemoved = new EntitySet<StockRemoved>(new Action<StockRemoved>(this.attach_StockRemoved), new Action<StockRemoved>(this.detach_StockRemoved));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDno", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IDno
		{
			get
			{
				return this._IDno;
			}
			set
			{
				if ((this._IDno != value))
				{
					this.OnIDnoChanging(value);
					this.SendPropertyChanging();
					this._IDno = value;
					this.SendPropertyChanged("IDno");
					this.OnIDnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pass", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Pass
		{
			get
			{
				return this._Pass;
			}
			set
			{
				if ((this._Pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._Pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CellNo
		{
			get
			{
				return this._CellNo;
			}
			set
			{
				if ((this._CellNo != value))
				{
					this.OnCellNoChanging(value);
					this.SendPropertyChanging();
					this._CellNo = value;
					this.SendPropertyChanged("CellNo");
					this.OnCellNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpAddress", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string EmpAddress
		{
			get
			{
				return this._EmpAddress;
			}
			set
			{
				if ((this._EmpAddress != value))
				{
					this.OnEmpAddressChanging(value);
					this.SendPropertyChanging();
					this._EmpAddress = value;
					this.SendPropertyChanged("EmpAddress");
					this.OnEmpAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Decimal(18,0) NOT NULL")]
		public decimal Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activated", DbType="Bit")]
		public System.Nullable<bool> Activated
		{
			get
			{
				return this._Activated;
			}
			set
			{
				if ((this._Activated != value))
				{
					this.OnActivatedChanging(value);
					this.SendPropertyChanging();
					this._Activated = value;
					this.SendPropertyChanged("Activated");
					this.OnActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Sale__EmpID__2F10007B", Storage="_Sale", ThisKey="EmpID", OtherKey="EmpID", DeleteRule="NO ACTION")]
		public EntitySet<Sale> Sale
		{
			get
			{
				return this._Sale;
			}
			set
			{
				this._Sale.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_StockRemoved_Employee", Storage="_StockRemoved", ThisKey="EmpID", OtherKey="EmpId", DeleteRule="NO ACTION")]
		public EntitySet<StockRemoved> StockRemoved
		{
			get
			{
				return this._StockRemoved;
			}
			set
			{
				this._StockRemoved.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sale(Sale entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Sale(Sale entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_StockRemoved(StockRemoved entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_StockRemoved(StockRemoved entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reserve")]
	public partial class Reserve : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResID;
		
		private System.DateTime _ResDate;
		
		private string _Name;
		
		private string _Surname;
		
		private string _IDno;
		
		private string _CellNo;
		
		private string _Email;
		
		private int _StockID;
		
		private EntityRef<Stock> _Stock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResIDChanging(int value);
    partial void OnResIDChanged();
    partial void OnResDateChanging(System.DateTime value);
    partial void OnResDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnIDnoChanging(string value);
    partial void OnIDnoChanged();
    partial void OnCellNoChanging(string value);
    partial void OnCellNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnStockIDChanging(int value);
    partial void OnStockIDChanged();
    #endregion
		
		public Reserve()
		{
			this._Stock = default(EntityRef<Stock>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResID
		{
			get
			{
				return this._ResID;
			}
			set
			{
				if ((this._ResID != value))
				{
					this.OnResIDChanging(value);
					this.SendPropertyChanging();
					this._ResID = value;
					this.SendPropertyChanged("ResID");
					this.OnResIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResDate", DbType="Date NOT NULL")]
		public System.DateTime ResDate
		{
			get
			{
				return this._ResDate;
			}
			set
			{
				if ((this._ResDate != value))
				{
					this.OnResDateChanging(value);
					this.SendPropertyChanging();
					this._ResDate = value;
					this.SendPropertyChanged("ResDate");
					this.OnResDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDno", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string IDno
		{
			get
			{
				return this._IDno;
			}
			set
			{
				if ((this._IDno != value))
				{
					this.OnIDnoChanging(value);
					this.SendPropertyChanging();
					this._IDno = value;
					this.SendPropertyChanged("IDno");
					this.OnIDnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellNo", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string CellNo
		{
			get
			{
				return this._CellNo;
			}
			set
			{
				if ((this._CellNo != value))
				{
					this.OnCellNoChanging(value);
					this.SendPropertyChanging();
					this._CellNo = value;
					this.SendPropertyChanged("CellNo");
					this.OnCellNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockID", DbType="Int NOT NULL")]
		public int StockID
		{
			get
			{
				return this._StockID;
			}
			set
			{
				if ((this._StockID != value))
				{
					if (this._Stock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockIDChanging(value);
					this.SendPropertyChanging();
					this._StockID = value;
					this.SendPropertyChanged("StockID");
					this.OnStockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Reserve__StockID__164452B1", Storage="_Stock", ThisKey="StockID", OtherKey="StockID", IsForeignKey=true)]
		public Stock Stock
		{
			get
			{
				return this._Stock.Entity;
			}
			set
			{
				Stock previousValue = this._Stock.Entity;
				if (((previousValue != value) 
							|| (this._Stock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stock.Entity = null;
						previousValue.Reserve.Remove(this);
					}
					this._Stock.Entity = value;
					if ((value != null))
					{
						value.Reserve.Add(this);
						this._StockID = value.StockID;
					}
					else
					{
						this._StockID = default(int);
					}
					this.SendPropertyChanged("Stock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale")]
	public partial class Sale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SaleID;
		
		private System.DateTime _SaleDate;
		
		private int _EmpID;
		
		private int _StockID;
		
		private int _CustID;
		
		private bool _Paid;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Stock> _Stock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSaleIDChanging(int value);
    partial void OnSaleIDChanged();
    partial void OnSaleDateChanging(System.DateTime value);
    partial void OnSaleDateChanged();
    partial void OnEmpIDChanging(int value);
    partial void OnEmpIDChanged();
    partial void OnStockIDChanging(int value);
    partial void OnStockIDChanged();
    partial void OnCustIDChanging(int value);
    partial void OnCustIDChanged();
    partial void OnPaidChanging(bool value);
    partial void OnPaidChanged();
    #endregion
		
		public Sale()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Employee = default(EntityRef<Employee>);
			this._Stock = default(EntityRef<Stock>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SaleID
		{
			get
			{
				return this._SaleID;
			}
			set
			{
				if ((this._SaleID != value))
				{
					this.OnSaleIDChanging(value);
					this.SendPropertyChanging();
					this._SaleID = value;
					this.SendPropertyChanged("SaleID");
					this.OnSaleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleDate", DbType="Date NOT NULL")]
		public System.DateTime SaleDate
		{
			get
			{
				return this._SaleDate;
			}
			set
			{
				if ((this._SaleDate != value))
				{
					this.OnSaleDateChanging(value);
					this.SendPropertyChanging();
					this._SaleDate = value;
					this.SendPropertyChanged("SaleDate");
					this.OnSaleDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="Int NOT NULL")]
		public int EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIDChanging(value);
					this.SendPropertyChanging();
					this._EmpID = value;
					this.SendPropertyChanged("EmpID");
					this.OnEmpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockID", DbType="Int NOT NULL")]
		public int StockID
		{
			get
			{
				return this._StockID;
			}
			set
			{
				if ((this._StockID != value))
				{
					if (this._Stock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockIDChanging(value);
					this.SendPropertyChanging();
					this._StockID = value;
					this.SendPropertyChanged("StockID");
					this.OnStockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustID", DbType="Int NOT NULL")]
		public int CustID
		{
			get
			{
				return this._CustID;
			}
			set
			{
				if ((this._CustID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustIDChanging(value);
					this.SendPropertyChanging();
					this._CustID = value;
					this.SendPropertyChanged("CustID");
					this.OnCustIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Bit NOT NULL")]
		public bool Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Sale__CustID__1B0907CE", Storage="_Customer", ThisKey="CustID", OtherKey="CustID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Sale.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Sale.Add(this);
						this._CustID = value.CustID;
					}
					else
					{
						this._CustID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Sale__EmpID__2F10007B", Storage="_Employee", ThisKey="EmpID", OtherKey="EmpID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Sale.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Sale.Add(this);
						this._EmpID = value.EmpID;
					}
					else
					{
						this._EmpID = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Sale__StockID__1A14E395", Storage="_Stock", ThisKey="StockID", OtherKey="StockID", IsForeignKey=true)]
		public Stock Stock
		{
			get
			{
				return this._Stock.Entity;
			}
			set
			{
				Stock previousValue = this._Stock.Entity;
				if (((previousValue != value) 
							|| (this._Stock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stock.Entity = null;
						previousValue.Sale.Remove(this);
					}
					this._Stock.Entity = value;
					if ((value != null))
					{
						value.Sale.Add(this);
						this._StockID = value.StockID;
					}
					else
					{
						this._StockID = default(int);
					}
					this.SendPropertyChanged("Stock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stock")]
	public partial class Stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StockID;
		
		private string _VIN;
		
		private string _VehicleYear;
		
		private string _Model;
		
		private string _Make;
		
		private string _VehicleStatus;
		
		private decimal _Price;
		
		private EntitySet<Reserve> _Reserve;
		
		private EntitySet<Sale> _Sale;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStockIDChanging(int value);
    partial void OnStockIDChanged();
    partial void OnVINChanging(string value);
    partial void OnVINChanged();
    partial void OnVehicleYearChanging(string value);
    partial void OnVehicleYearChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    partial void OnVehicleStatusChanging(string value);
    partial void OnVehicleStatusChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
		public Stock()
		{
			this._Reserve = new EntitySet<Reserve>(new Action<Reserve>(this.attach_Reserve), new Action<Reserve>(this.detach_Reserve));
			this._Sale = new EntitySet<Sale>(new Action<Sale>(this.attach_Sale), new Action<Sale>(this.detach_Sale));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StockID
		{
			get
			{
				return this._StockID;
			}
			set
			{
				if ((this._StockID != value))
				{
					this.OnStockIDChanging(value);
					this.SendPropertyChanging();
					this._StockID = value;
					this.SendPropertyChanged("StockID");
					this.OnStockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIN", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string VIN
		{
			get
			{
				return this._VIN;
			}
			set
			{
				if ((this._VIN != value))
				{
					this.OnVINChanging(value);
					this.SendPropertyChanging();
					this._VIN = value;
					this.SendPropertyChanged("VIN");
					this.OnVINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleYear", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string VehicleYear
		{
			get
			{
				return this._VehicleYear;
			}
			set
			{
				if ((this._VehicleYear != value))
				{
					this.OnVehicleYearChanging(value);
					this.SendPropertyChanging();
					this._VehicleYear = value;
					this.SendPropertyChanged("VehicleYear");
					this.OnVehicleYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleStatus", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string VehicleStatus
		{
			get
			{
				return this._VehicleStatus;
			}
			set
			{
				if ((this._VehicleStatus != value))
				{
					this.OnVehicleStatusChanging(value);
					this.SendPropertyChanging();
					this._VehicleStatus = value;
					this.SendPropertyChanged("VehicleStatus");
					this.OnVehicleStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Reserve__StockID__164452B1", Storage="_Reserve", ThisKey="StockID", OtherKey="StockID", DeleteRule="NO ACTION")]
		public EntitySet<Reserve> Reserve
		{
			get
			{
				return this._Reserve;
			}
			set
			{
				this._Reserve.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK__Sale__StockID__1A14E395", Storage="_Sale", ThisKey="StockID", OtherKey="StockID", DeleteRule="NO ACTION")]
		public EntitySet<Sale> Sale
		{
			get
			{
				return this._Sale;
			}
			set
			{
				this._Sale.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reserve(Reserve entity)
		{
			this.SendPropertyChanging();
			entity.Stock = this;
		}
		
		private void detach_Reserve(Reserve entity)
		{
			this.SendPropertyChanging();
			entity.Stock = null;
		}
		
		private void attach_Sale(Sale entity)
		{
			this.SendPropertyChanging();
			entity.Stock = this;
		}
		
		private void detach_Sale(Sale entity)
		{
			this.SendPropertyChanging();
			entity.Stock = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockRemoved")]
	public partial class StockRemoved : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StockRemovedID;
		
		private System.DateTime _DateRemoved;
		
		private int _EmpId;
		
		private string _VIN;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStockRemovedIDChanging(int value);
    partial void OnStockRemovedIDChanged();
    partial void OnDateRemovedChanging(System.DateTime value);
    partial void OnDateRemovedChanged();
    partial void OnEmpIdChanging(int value);
    partial void OnEmpIdChanged();
    partial void OnVINChanging(string value);
    partial void OnVINChanged();
    #endregion
		
		public StockRemoved()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockRemovedID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StockRemovedID
		{
			get
			{
				return this._StockRemovedID;
			}
			set
			{
				if ((this._StockRemovedID != value))
				{
					this.OnStockRemovedIDChanging(value);
					this.SendPropertyChanging();
					this._StockRemovedID = value;
					this.SendPropertyChanged("StockRemovedID");
					this.OnStockRemovedIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRemoved", DbType="DateTime NOT NULL")]
		public System.DateTime DateRemoved
		{
			get
			{
				return this._DateRemoved;
			}
			set
			{
				if ((this._DateRemoved != value))
				{
					this.OnDateRemovedChanging(value);
					this.SendPropertyChanging();
					this._DateRemoved = value;
					this.SendPropertyChanged("DateRemoved");
					this.OnDateRemovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpId", DbType="Int NOT NULL")]
		public int EmpId
		{
			get
			{
				return this._EmpId;
			}
			set
			{
				if ((this._EmpId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpIdChanging(value);
					this.SendPropertyChanging();
					this._EmpId = value;
					this.SendPropertyChanged("EmpId");
					this.OnEmpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIN", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string VIN
		{
			get
			{
				return this._VIN;
			}
			set
			{
				if ((this._VIN != value))
				{
					this.OnVINChanging(value);
					this.SendPropertyChanging();
					this._VIN = value;
					this.SendPropertyChanged("VIN");
					this.OnVINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_StockRemoved_Employee", Storage="_Employee", ThisKey="EmpId", OtherKey="EmpID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.StockRemoved.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.StockRemoved.Add(this);
						this._EmpId = value.EmpID;
					}
					else
					{
						this._EmpId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SalesResult
	{
		
		private System.Nullable<int> _SaleID;
		
		private System.Nullable<System.DateTime> _SaleDate;
		
		private System.Nullable<bool> _Paid;
		
		private string _VIN;
		
		private System.Nullable<decimal> _Price;
		
		private string _Name;
		
		private string _Surname;
		
		private string _IDno;
		
		private System.Nullable<int> _EmpID;
		
		public SalesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleID", DbType="Int")]
		public System.Nullable<int> SaleID
		{
			get
			{
				return this._SaleID;
			}
			set
			{
				if ((this._SaleID != value))
				{
					this._SaleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleDate", DbType="Date")]
		public System.Nullable<System.DateTime> SaleDate
		{
			get
			{
				return this._SaleDate;
			}
			set
			{
				if ((this._SaleDate != value))
				{
					this._SaleDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Bit")]
		public System.Nullable<bool> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this._Paid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIN", DbType="NVarChar(MAX)")]
		public string VIN
		{
			get
			{
				return this._VIN;
			}
			set
			{
				if ((this._VIN != value))
				{
					this._VIN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(40)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(40)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDno", DbType="VarChar(50)")]
		public string IDno
		{
			get
			{
				return this._IDno;
			}
			set
			{
				if ((this._IDno != value))
				{
					this._IDno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="Int")]
		public System.Nullable<int> EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this._EmpID = value;
				}
			}
		}
	}
	
	public partial class Sp_helpdiagramdefinitionResult
	{
		
		private System.Nullable<int> _Version;
		
		private System.Data.Linq.Binary _Definition;
		
		public Sp_helpdiagramdefinitionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="version", Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="definition", Storage="_Definition", DbType="VarBinary(MAX)", CanBeNull=true)]
		public System.Data.Linq.Binary Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this._Definition = value;
				}
			}
		}
	}
	
	public partial class Sp_helpdiagramsResult
	{
		
		private string _Database;
		
		private string _Name;
		
		private System.Nullable<int> _ID;
		
		private string _Owner;
		
		private System.Nullable<int> _OwnerID;
		
		public Sp_helpdiagramsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Database", DbType="NVarChar(128)")]
		public string Database
		{
			get
			{
				return this._Database;
			}
			set
			{
				if ((this._Database != value))
				{
					this._Database = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="NVarChar(128)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this._Owner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int")]
		public System.Nullable<int> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
